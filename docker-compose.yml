x-default-healthcheck: &default-healthcheck
  interval: 60s
  timeout: 20s
  retries: 5
  start_period: 60s
  start_interval: 5s
services:
  db:
    restart: unless-stopped
    image: "postgres:16-alpine"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      <<: *default-healthcheck
  redis:
    restart: always
    image: "redis:alpine"
    hostname: redis
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      <<: *default-healthcheck
  celery:
    build:
      context: ./web
    restart: unless-stopped
    image: git.nvroot.com/nvroot/rengine-celery:latest
    entrypoint: /usr/src/app/celery-entrypoint.sh
    # command: celery -A reNgine worker --autoscale=${MAX_CONCURRENCY},${MIN_CONCURRENCY} -l INFO
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
      - static_volume:/usr/src/app/staticfiles/
    deploy:
      resources:
        limits:
          memory: 2000M
        reservations:
          memory: 2000M
    memswap_limit: 7G
    mem_limit: 2000M
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DOMAIN_NAME=${DOMAIN_NAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - MAX_CONCURRENCY=${MAX_CONCURRENCY}
      - MIN_CONCURRENCY=${MIN_CONCURRENCY}
    depends_on:
      - db
      - redis
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD", "echo", "health"]
      <<: *default-healthcheck
  celery-beat:
    build: ./web
    entrypoint: /usr/src/app/beat-entrypoint.sh
    image: git.nvroot.com/nvroot/rengine-beat:latest
    command: celery -A reNgine beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: unless-stopped
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - celery
      - db
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD", "echo", "health"]
      <<: *default-healthcheck
  web:
    build:
      context: ./web
    entrypoint: /usr/src/app/entrypoint.sh
    restart: unless-stopped
    image: git.nvroot.com/nvroot/rengine-web:latest
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DOMAIN_NAME=${DOMAIN_NAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
      - static_volume:/usr/src/app/staticfiles/
    expose:
      - 8000
    depends_on:
      - db
      - celery
      - celery-beat
    networks:
      rengine_network:
        aliases:
          - rengine
    healthcheck:
      test: ["CMD", "echo", "health"]
      <<: *default-healthcheck
  proxy:
    restart: unless-stopped
    image: nginx:alpine
    expose:
      - 8082
      - 443
    depends_on:
      - web
      - db
      - redis
    secrets:
      - source: proxy.ca
        target: /etc/nginx/certs/rengine_chain.pem
      - source: proxy.cert
        target: /etc/nginx/certs/rengine.pem
      - source: proxy.key
        target: /etc/nginx/certs/rengine_rsa.key
    volumes:
      - ./config/nginx/rengine.conf:/etc/nginx/conf.d/rengine.conf:ro
      - static_volume:/usr/src/app/staticfiles/
      - scan_results:/usr/src/scan_results
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD", "echo", "health"]
      <<: *default-healthcheck
  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    expose:
      - 11434
    networks:
      - rengine_network
    healthcheck:
      test: ["CMD", "ollama", "list"]
      <<: *default-healthcheck
networks:
  rengine_network:

volumes:
  tool_config:
  postgres_data:
  gf_patterns:
  nuclei_templates:
  github_repos:
  wordlist:
  scan_results:
  static_volume:
  ollama_data:

secrets:
  proxy.ca:
    file: ./secrets/certs/rengine_chain.pem
  proxy.key:
    file: ./secrets/certs/rengine_rsa.key
  proxy.cert:
    file: ./secrets/certs/rengine.pem
